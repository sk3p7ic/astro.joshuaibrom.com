---
type JobEntryType = {
  employer: string;
  title: string;
  start_date: string;
  end_date?: string;
  responsibilities: (string | string[])[];
};

export interface Props {
  entry: JobEntryType;
}

const { entry } = Astro.props;

const toDate = (ds?: string): string =>
  ds ? Intl.DateTimeFormat("en-us").format(new Date(ds)) : "";
---

<div class="p-4 font-inter bg-zinc-700 rounded-xl flex flex-col gap-2">
  <div class="border-b border-b-zinc-400">
    <h1 class="font-raleway font-bold text-3xl">{entry.employer}</h1>
    <h2 class="font-raleway font-thin text-2xl">{entry.title}</h2>
  </div>
  <div class="flex-grow">
    {
      entry.responsibilities.map((resp) =>
        typeof resp === "string" ? (
          <p>{resp}</p>
        ) : (
          <ul class="list-disc pl-6">
            {resp.map((r) => (
              <li>{r}</li>
            ))}
          </ul>
        )
      )
    }
  </div>
  <p class="text-sm text-zinc-400">
    {toDate(entry.start_date)}
    {entry.end_date ? `- ${toDate(entry.end_date)}` : ""}
  </p>
</div>
